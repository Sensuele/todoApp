{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","trim","text","completed","id","Math","random","name","Todo","todo","map","el","filter","TodoList","filteredTodos","console","log","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba7e986a.chunk.js","sourcesContent":["import React from 'react';\r\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n\r\n  const inputTextHandler = e => {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  const submitTodoHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (inputText?.trim() !== \"\") {\r\n      setTodos([...todos, {text: inputText, completed: false, id: Math.random() }]);\r\n      setInputText(\"\");\r\n    }\r\n  }\r\n\r\n  const statusHandler = e => {\r\n    setStatus(e.target.value)\r\n  }\r\n  return (\r\n    <div>\r\n      <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i>+</i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Todo = ({text, todos, setTodos, todo}) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter(el => el.id !== todo.id))\r\n  }\r\n  \r\n  const completeHandler = () => {\r\n    setTodos(todos.map(el => {\r\n      if (el.id === todo.id) {\r\n        return {\r\n          ...el, completed: !el.completed\r\n        }\r\n      }\r\n      return el;\r\n    }))\r\n  } \r\n\r\n  return (\r\n    <li className=\"todo\">\r\n      <div className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</div>\r\n      <button onClick={completeHandler} className=\"complete-btn\">done</button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">X</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  console.log(filteredTodos)\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            text={todo.text}\r\n            key={todo.id}\r\n            todo={todo}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos()\n  }, [])\n\n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n\n    const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos))\n    }\n\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n    setTodos(todoLocal)\n  }\n \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        \n      />\n      <TodoList setTodos={setTodos} todos={todos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}